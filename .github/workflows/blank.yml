# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # # Runs a set of commands using the runners shell
      # - name: Run a multi-line script
      #   run: |
      #     set where iisreset
      #     rem powershell -ExecutionPolicy Bypass .\tools\deploy-site.ps1 -site_name test-site -app_name test-site -site_hostname test-site -code_folder ..\site
      #     choco list --source windowsfeatures
      #     curl -vvvv http://localhost
      #   shell: cmd

      - name: Create a site
        shell: powershell
        run: |

          # Start /w pkgmgr /iu:IIS-WebServerRole;IIS-WebServer;IIS-CommonHttpFeatures;IIS-StaticContent;IIS-DefaultDocument;IIS-DirectoryBrowsing;IIS-HttpErrors;IIS-HealthAndDiagnostics;IIS-HttpLogging;IIS-LoggingLibraries;IIS-RequestMonitor;IIS-Security;IIS-RequestFiltering;IIS-HttpCompressionStatic;IIS-WebServerManagementTools;IIS-ManagementConsole;WAS-WindowsActivationService;WAS-ProcessModel;WAS-NetFxEnvironment;WAS-ConfigurationAPI

          Enable-WindowsOptionalFeature -Online -FeatureName IIS-WebServerRole  -All
          Enable-WindowsOptionalFeature -Online -FeatureName IIS-WebServer  -All
          Enable-WindowsOptionalFeature -Online -FeatureName IIS-CommonHttpFeatures  -All
          Enable-WindowsOptionalFeature -Online -FeatureName IIS-StaticContent  -All
          Enable-WindowsOptionalFeature -Online -FeatureName IIS-DefaultDocument  -All
          Enable-WindowsOptionalFeature -Online -FeatureName IIS-DirectoryBrowsing  -All
          Enable-WindowsOptionalFeature -Online -FeatureName IIS-HttpErrors  -All
          Enable-WindowsOptionalFeature -Online -FeatureName IIS-HealthAndDiagnostics  -All
          Enable-WindowsOptionalFeature -Online -FeatureName IIS-HttpLogging  -All
          Enable-WindowsOptionalFeature -Online -FeatureName IIS-LoggingLibraries  -All
          Enable-WindowsOptionalFeature -Online -FeatureName IIS-RequestMonitor  -All
          Enable-WindowsOptionalFeature -Online -FeatureName IIS-Security  -All
          Enable-WindowsOptionalFeature -Online -FeatureName IIS-RequestFiltering  -All
          Enable-WindowsOptionalFeature -Online -FeatureName IIS-HttpCompressionStatic  -All
          Enable-WindowsOptionalFeature -Online -FeatureName IIS-WebServerManagementTools  -All
          Enable-WindowsOptionalFeature -Online -FeatureName IIS-ManagementConsole  -All
          Enable-WindowsOptionalFeature -Online -FeatureName WAS-WindowsActivationService  -All
          Enable-WindowsOptionalFeature -Online -FeatureName WAS-ProcessModel  -All
          Enable-WindowsOptionalFeature -Online -FeatureName WAS-NetFxEnvironment  -All
          Enable-WindowsOptionalFeature -Online -FeatureName WAS-ConfigurationAPI  -All


          Import-Module WebAdministration
          $siteName = "TestSite";
          $siteIISAppPool = "IIS:\AppPools\" + $siteName;

          Write-Host "Create Directory"
          #$physicalLocation = $Env:systemdrive + "\inetpub\" + $siteName;
          $physicalLocation = $Env:GITHUB_WORKSPACE + "\site"
          Write-Host "Directory name: '$physicalLocation'."
          #New-Item -path $physicalLocation -ItemType directory;


          Write-Host "Create App Pool"
          New-WebAppPool -Name $siteName;
          Set-ItemProperty -Path "IIS:\AppPools\$siteName" -Name managedRuntimeVersion -Value "v4.0";

          Write-Host "Create Site"
          New-WebSite -Name $siteName -Port 80 -HostHeader $siteName -PhysicalPath $physicalLocation -ApplicationPool $siteName
          #New-WebBinding -Name $siteName -Protocol "http" -Port 80 -HostHeader $siteName;

          Write-Host "Site deets"
          Get-IISSite $siteName

          Write-Host "Physical path"
          $Site = Get-IISSite $siteName
          $Site.Attributes["PhysicalPath"]

          # Seeming kludge
          Write-Host "Kludge"
          Set-ItemProperty "IIS:\Sites\$siteName" -name "PhysicalPath" -value $physicalLocation

          Write-Host "Physical path"
          $Site = Get-IISSite $siteName
          $Site.Attributes["PhysicalPath"]


          Write-Host "All Site deets"
          Get-IISSite


      - name: Whatsitdo
        shell: bash
        run: |
          curl -vvvv --silent -H 'Host: TestSite' http://localhost:80/index.htm -o file
          ls -lh
          cat file

      - name: En Vars
        shell: cmd
        run: |
          set

